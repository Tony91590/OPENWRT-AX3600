name: Build_ax3600vr45

on: 
  repository_dispatch:
  workflow_dispatch:

# 定时触发编译
#  schedule:
#    - cron: 30 3 * * *

# 点赞☆Star触发编译
#  watch:
#    types: [started]

jobs:
  Build_ax3600:
    runs-on: ubuntu-18.04
    steps:
    - name: Clone Repository
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo add-apt-repository -y ppa:avsm/ppa
          sudo apt update
          sudo apt-get install -y opam ocaml-nox git zip subversion build-essential flex wget gawk unzip man file zlib1g-dev libssl-dev libncurses5-dev

          opam init
          eval `opam env`
          opam switch create 4.02.3
          eval `opam env`
          opam install -y ocamlfind camlp4

    - name: Clone source QSDK
      env: 
        REPO_URL: https://github.com/felix-fly/qsdk-11.git
        REPO_BRANCH: main
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH QCA
        cd QCA

    - name: Clone .config
      working-directory: ./QCA
      run: |
         ./scripts/feeds update -a
         ./scripts/feeds install -a

         wget https://raw.githubusercontent.com/felix-fly/router-map/main/ipq6000x64.config -O .config

        
    - name: Update & Install feeds
      working-directory: ./QCA
      run: |
          make defconfig
          make -j$(nproc) || make

    - name: Download deconf
      working-directory: ./QCA
      run: |
          cd ..
          mkdir bin
          mkdir bin/packages
          mv qsdk/bin/ipq/*.img bin
          mv qsdk/bin/ipq/*.bin bin
          mv qsdk/bin/ipq/*.tar.bz2 bin
          find qsdk/bin/ipq -name \*.ipk -exec cp {} bin/packages \; 
        
    - name: Download package
      working-directory: ./QCA
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Build firmware
      working-directory: ./QCA
      run: |
        make -j$(nproc) V=s

    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./AX3600_Out
        mkdir -p ./AX3600_Out/
        mkdir -p ./AX3600_Out/firmware
        mkdir -p ./AX3600_Out/package
        mkdir -p ./AX3600_Out/buildinfo
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
        cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
        cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/ 
       
    - name: Upload Firmwares
      uses: actions/upload-artifact@main
      with:
        name: AX3600-OpenWrt
        path: AX3600_Out/* 
        
    - name: Generate Tag & Release Name
      id: generate_name
      run: |
        time=$(date +%Y%m%d%H%M)
        release_tag="$time"
        release_name="Xiaomi-AX3600-OpenWrt-$(date +%Y%m%d)"
        echo "##[set-output name=release_name;]$release_name"
        echo "##[set-output name=release_tag;]$release_tag"        
    - name: Create Release & Upload
      uses: ncipollo/release-action@v1
      with:
        artifacts: AX3600_Out/*
        name: ${{ steps.generate_name.outputs.release_name }}
        tag: ${{ steps.generate_name.outputs.release_tag }}
        token: ${{ secrets.GITHUB_TOKEN }}           
