name: Build_ax3600

on: 
  repository_dispatch:
  workflow_dispatch:

# 定时触发编译
#  schedule:
#    - cron: 30 3 * * *

# 点赞☆Star触发编译
#  watch:
#    types: [started]

jobs:
  Build_ax3600:
    runs-on: ubuntu-18.04
    steps:
    - name: Clone Repository
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

    - name: Clone source QSDK
      env: 
        REPO_URL: https://github.com/Tony91590/qsdk
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH QCA
        cd QCA
        
    - name: Clone .config
      working-directory: ./QCA
      run: |
          cp config-ax3600-512M .config
        
    - name: Update & Install feeds
      working-directory: ./QCA
      run: |
          make package/symlinks
 
    - name: Download deconf
      working-directory: ./QCA
      run: |
          make defconfig 
        
    - name: Download package
      working-directory: ./QCA
      run: |
        make download -j1
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Build firmware
      working-directory: ./QCA
      run: |
        make -j1 V=s

    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./AX3600_Out
        mkdir -p ./AX3600_Out/
        mkdir -p ./AX3600_Out/firmware
        mkdir -p ./AX3600_Out/package
        mkdir -p ./AX3600_Out/buildinfo
        rm -rf $(find ./bin/targets/ -type d -name "packages")
        cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
        cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
        cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/ 
       
    - name: Upload Firmwares
      uses: actions/upload-artifact@main
      with:
        name: AX3600-OpenWrt
        path: AX3600_Out/* 
        
    - name: Generate Tag & Release Name
      id: generate_name
      run: |
        time=$(date +%Y%m%d%H%M)
        release_tag="$time"
        release_name="Xiaomi-AX3600-OpenWrt-$(date +%Y%m%d)"
        echo "##[set-output name=release_name;]$release_name"
        echo "##[set-output name=release_tag;]$release_tag"        
    - name: Create Release & Upload
      uses: ncipollo/release-action@v1
      with:
        artifacts: AX3600_Out/*
        name: ${{ steps.generate_name.outputs.release_name }}
        tag: ${{ steps.generate_name.outputs.release_tag }}
        token: ${{ secrets.GITHUB_TOKEN }}           
